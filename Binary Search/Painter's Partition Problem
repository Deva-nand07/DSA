bool isPossible(vector<int> &boards, int k, int mid)
{
    int painterCount=1;
    int paintSum=0;
    if(k> boards.size())
    {
        return false;
    }
    for(int i=0; i<boards.size(); i++)
    {
        if(paintSum+boards[i]<=mid)
        {
            paintSum+=boards[i];
        }
        else{
            painterCount++;
            if(painterCount>k || boards[i]>mid)
            {
                return false;
            }
            paintSum=boards[i];
        }
    }
    return true;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int start=0, end=0, ans=-1;
    for(int i=0; i<boards.size(); i++)
    {
        end+=boards[i];
    }
    while(start<=end)
    {
        int mid=start+(end-start)/2;
        if(isPossible(boards, k, mid))
        {
            ans=mid;
            end=mid-1;
        }
        else{
            start=mid+1;
        }
    }
    return ans;
}
