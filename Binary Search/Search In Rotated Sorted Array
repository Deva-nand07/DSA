int getpivort(int* arr, int n){
    int low=0, high=n-1;
    // not rotated at all
    if (arr[low] <= arr[high]) return 0;
    while(low<high)
    {
        int mid=low+(high-low)/2;
        if(arr[mid]>=arr[0])
        {
            low=mid+1;
        }
        else{
            high=mid;
        }
    }
    return low;
}
int BinarySearch(int* arr,int s ,int size, int item)
{
    int low = s, high = size - 1;
    while (low <= high)
    {
        int mid = low + (high - low) / 2;
        if (item == arr[mid])
        {
            return mid;
        }
        else if (item >= arr[mid])
        {
            low = mid + 1;
        }
        else
        {
            high = mid - 1;
        }
    }
    return -1;
}
int search(int* arr, int n, int key) {
    int pivort=getpivort(arr, n);
    if((arr[pivort]<=key)&&(key<=arr[n-1]))
    {
        BinarySearch(arr, pivort, n, key);
    }
    else{
        BinarySearch(arr, 0,pivort, key);
    }
}
