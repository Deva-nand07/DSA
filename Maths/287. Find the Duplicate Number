class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int slow = nums[0];
        int fast = nums[0];

        // First phase: Find the intersection point
        do {
            slow = nums[slow];
            fast = nums[nums[fast]];
        } while (slow != fast);

        // Second phase: Find the start of the cycle (duplicate number)
        int start = nums[0];
        while (start != slow) {
            start = nums[start];
            slow = nums[slow];
        }

        return start;
    }
};
